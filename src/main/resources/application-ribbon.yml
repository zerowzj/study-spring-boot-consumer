#
spring:
  cloud:
    loadbalancer:
      #（▲）重试
      retry:
        enabled: false
#
ribbon:
  #（▲）eureka！！！
  eureka:
    enabled: true
  #（▲）饥饿加载
  #是否开启饥饿加载，默认false，为true的时候会关闭懒加载
  #Ribbon 进行客户端负载均衡的 Client 并不是在服务启动的时候就初始化好的， 而是在调用时才去创建相应的Client，
  #所以第一次调用的耗时不仅包含发送HTTP请求的时间，还包含创建RibbonClient的时间，
  #这样一来如果创建时间速度较慢，同时设置的超时时间又比较短的话，第一次请求很容易超时
  eager-load:
    enabled: true
    #指定需要饥饿加载的服务，逗号分隔
    clients: study-springboot-provider
  #（▲）http客户端
  #  restclient:
  #    enabled: false
  #  okhttp:
  #    enabled: true
  #（▲）超时
  ConnectTimeout: 3000
  ReadTimeout: 3000
#  #（▲）连接
#  #最大连接数
#  MaxTotalConnections: 5000
#  #每个主机的最大连接数
#  MaxConnectionsPerHost: 5000
#  #（▲）重试
#  #是否所有操作都进行重试：设置为true时，会对所有的请求进行重试；若为false，只会对get请求进行重试
#  #默认情况下，get方式请求无论是连接异常还是读取异常，都会进行重试；非get方式请求，只有连接异常时才会进行重试
#  #如果是put或post等写操作，如果服务器接口没做幂等性，会产生不好的结果，所以OkToRetryOnAllOperations慎用
#  OkToRetryOnAllOperations: true
#  #同一实例最大重试次数，不包括首次调用
#  MaxAutoRetries: 1
#  #重试其他实例的最大重试次数，不包括首次所选的Server
#  MaxAutoRetriesNextServer: 3
#  #对Http响应码进行重试
#  RetryableStatusCodes: 404,500,502
